let gui_broker={play_status:!1,droplets:[],electrodes:[],droplet_groups:{},next_simulator_step:()=>{DotNet.invokeMethodAsync("MicrofluidSimulator","JSSimulatorNextStep")},init_board:()=>{},get_droplet_groups:function(){this.droplet_groups={};for(let n=0;n<this.droplets.length;n++)typeof this.droplet_groups[this.droplets[n].Group]=="undefined"?this.droplet_groups[this.droplets[n].Group]=[this.droplets[n]]:this.droplet_groups[this.droplets[n].Group].push(this.droplets[n])}},gui_controller={simulatorGUI:document.querySelector("#simulatorGUI"),getLayerPanel:()=>this.simulatorGUI.querySelector("#layerPanel"),getInputNodes:()=>this.simulatorGUI.querySelector("#layerPanel").getElementsByTagName("INPUT"),getInformaitonPanel:()=>this.simulatorGUI.querySelector("#information"),changeBoardName:n=>{this.simulatorGUI.querySelector("#simulatorView span").innerHTML=n},showGUI:()=>{simulatorGUI.style.visibility="visible"}},layer_manager={layers:{draw_droplets:{name:"droplet_draw_call",value:"droplet_draw_call",id:"draw_droplet",text:"Draw Droplets",element:"insert",checkbox:"insert",checked:!1},draw_droplet_groups:{name:"droplet_group_draw_call",value:"droplet_group_draw_call",id:"draw_droplet_group",text:"Draw Droplet Groups",element:"insert",checkbox:"insert",checked:!0},draw_active_electrodes:{name:"draw_active_electrodes",value:"draw_active_electrodes",id:"draw_active_electrodes",text:"Draw Active Electrodes",element:"insert",checkbox:"insert",checked:!0},debug_electrode_text:{name:"debug_electrode_text",value:"debug_electrode_text",id:"db_e_text",text:"Electrode IDs",element:"insert",checkbox:"insert",checked:!1,layer:"insert"},draw_selected_element:{name:"draw_selected_element",value:"draw_selected_element",id:"drdraw_selected_element",text:"Draw Selected",element:"insert",checkbox:"insert",checked:!0,layer:"insert"}},initialize_layers:function(){for(let t in this.layers){var n=document.createElement("div");n.innerHTML=`<input type='checkbox' name='${this.layers[t].name}' value='${this.layers[t].value}' id='${this.layers[t].id}'/>
                             <label for='${this.layers[t].name}'>${this.layers[t].text}</label>`;this.layers[t].element=n;this.layers[t].checkbox=n.querySelector("input");this.layers[t].checkbox.checked=this.layers[t].checked;gui_controller.getLayerPanel().querySelector("form").append(n)}},draw_layers:function(n){for(let t in this.layers)this.layers[t].hasOwnProperty("layer")&&this.layers[t].checkbox.checked&&n.image(this.layers[t].layer,0,0)}},information_panel_manager={selected_element:null,draw_information:n=>{gui_controller.getInformaitonPanel().innerHTML="";let t=document.createElement("div");for(let i in n){let r=document.createElement("div"),u=document.createElement("input");r.innerHTML=i+": ";r.classList.add("information_item");u.value=n[i];u.readOnly=!1;u.classList.add("input_readonly");r.append(u);t.append(r)}gui_controller.getInformaitonPanel().append(t)}},simulator_droplets=[],simulator_electrodes=[],amount=0,layer_electrode_shape,sketch=function(n){function i(){if(layer_manager.layers.draw_droplet_groups.checkbox.checked)for(let t in gui_broker.droplet_groups)if(f(gui_broker.droplet_groups[t].vertices,n.mouseX,n.mouseY)){console.log("GRP "+t+" CLICKED");information_panel_manager.selected_element=r(t,gui_broker.droplet_groups[t]);information_panel_manager.draw_information(information_panel_manager.selected_element);return}for(let t in gui_broker.droplets){let i=gui_broker.droplets[t];if(n.dist(n.mouseX,n.mouseY,i.PositionX,i.PositionY)<i.SizeX/2){information_panel_manager.selected_element=i;information_panel_manager.draw_information(i);return}}for(let t in gui_broker.electrodes)if(u(gui_broker.electrodes[t],n.mouseX,n.mouseY)){information_panel_manager.selected_element=gui_broker.electrodes[t];information_panel_manager.draw_information(gui_broker.electrodes[t]);return}}function r(n,t){let i={Group_ID:n,Substance_name:t[0].Substance_name,Color:t[0].Color,Temperature:0,Volume:0,Droplets:[]};for(let n=0;n<t.length;n++){let r=t[n];i.Droplets.push(r.ID1);for(let n in r)n=="Volume"&&(i.Volume+=r[n]),n=="Temperature"&&(i.Temperature+=r[n])}return i.Temperature=i.Temperature/t.length,i}function u(n,t,i){let r=[];r=n.Shape==0?[[0,0],[n.SizeX,0],[n.SizeX,n.SizeY],[0,n.SizeY]]:n.Corners;let u,f,e=!1;for(u=0,f=r.length-1;u<r.length;f=u++){let s=r[u][0]+n.PositionX,o=r[u][1]+n.PositionY,c=r[f][0]+n.PositionX,h=r[f][1]+n.PositionY;o>i!=h>i&&t<(c-s)*(i-o)/(h-o)+s&&(e=!e)}return e}function f(n,t,i){let r,u,f=!1;for(r=0,u=n.length-1;r<n.length;u=r++){let o=n[r][0],e=n[r][1],h=n[u][0],s=n[u][1];e>i!=s>i&&t<(h-o)*(i-e)/(s-e)+o&&(f=!f)}return f}function e(){for(let t in gui_broker.droplet_groups){let u=gui_broker.electrodes[0].SizeX/2,e=gui_broker.droplet_groups[t][0],i=[e.PositionX-u,e.PositionY-u],f=[e.PositionX-e.SizeX/2,e.PositionY-e.SizeX/2],r=[];while(JSON.stringify(r).indexOf(JSON.stringify(f))==-1){let n=null,e=null,o=null,s=null;for(let r in gui_broker.droplet_groups[t]){let f=gui_broker.droplet_groups[t][r];f.PositionX==i[0]+u&&f.PositionY==i[1]-u?e=f:f.PositionX==i[0]-u&&f.PositionY==i[1]+u?o=f:f.PositionX==i[0]-u&&f.PositionY==i[1]-u?n=f:f.PositionX==i[0]+u&&f.PositionY==i[1]+u&&(s=f)}e==null&&s!=null?(r.push(f),JSON.stringify(r).indexOf(JSON.stringify([s.PositionX-s.SizeX/2,s.PositionY-s.SizeY/2]))==-1&&r.push([s.PositionX-s.SizeX/2,s.PositionY-s.SizeY/2]),f=[s.PositionX+s.SizeX/2,s.PositionY-s.SizeY/2],i=[i[0]+u*2,i[1]]):s==null&&o!=null?(r.push(f),JSON.stringify(r).indexOf(JSON.stringify([o.PositionX+o.SizeX/2,o.PositionY-o.SizeY/2]))==-1&&r.push([o.PositionX+o.SizeX/2,o.PositionY-o.SizeY/2]),f=[o.PositionX+o.SizeX/2,o.PositionY+o.SizeY/2],i=[i[0],i[1]+u*2]):o==null&&n!=null?(r.push(f),JSON.stringify(r).indexOf(JSON.stringify([n.PositionX+n.SizeX/2,n.PositionY+n.SizeY/2]))==-1&&r.push([n.PositionX+n.SizeX/2,n.PositionY+n.SizeY/2]),f=[n.PositionX-n.SizeX/2,n.PositionY+n.SizeY/2],i=[i[0]-u*2,i[1]]):n==null&&e!=null&&(r.push(f),JSON.stringify(r).indexOf(JSON.stringify([e.PositionX-e.SizeX/2,e.PositionY+e.SizeY/2]))==-1&&r.push([e.PositionX-e.SizeX/2,e.PositionY+e.SizeY/2]),f=[e.PositionX-e.SizeX/2,e.PositionY-e.SizeY/2],i=[i[0],i[1]-u*2])}n.fill(e.Color);let s=[];for(let t=0;t<r.length;t++)s.push(n.createVector(n.round(r[t][0],2),n.round(r[t][1],2)));gui_broker.droplet_groups[e.Group].vertices=r;o(n,s,50)}}function o(n,t,i){n.beginShape();for(let r=0;r<t.length;r++){const l=t[r],u=t[(r+1)%t.length],a=t[(r+2)%t.length],f=l.copy().sub(u).normalize(),e=a.copy().sub(u).normalize(),k=f.copy().add(e).normalize(),o=f.angleBetween(e);if(o!=0){const b=n.min(l.dist(u),a.dist(u))/2*n.abs(n.sin(o/2)),s=n.min(i,b),v=n.abs(s/n.sin(o/2)),h=u.copy().add(f.copy().mult(v)),c=u.copy().add(e.copy().mult(v)),y=.5523,p=h.copy().sub(f.copy().mult(2*s*y)),w=c.copy().sub(e.copy().mult(2*s*y));n.vertex(h.x,h.y);n.bezierVertex(p.x,p.y,w.x,w.y,c.x,c.y)}}n.endShape(n.CLOSE)}function s(t,i){n.resizeCanvas(t+1,i);for(let r in layer_manager.layers)layer_manager.layers[r].hasOwnProperty("layer")&&(layer_manager.layers[r].layer=n.createGraphics(t+1,i));for(let n=0;n<gui_broker.electrodes.length;n++){let t=gui_broker.electrodes[n];y(layer_manager.layers.debug_electrode_text.layer,t)}layer_electrode_shape=n.createGraphics(t+1,i);l()}function h(n,t){if((n.clear(),t!=null)&&t.Status!="undefined")for(let i=0;i<gui_broker.electrodes.length;i++){let r=gui_broker.electrodes[i];if(r==t)if(n.noFill(),n.stroke("blue"),n.strokeWeight(3),r.Shape==1){n.beginShape();for(let t=0;t<r.Corners.length;t++)n.vertex(r.PositionX+r.Corners[t][0]+.5,r.PositionY+r.Corners[t][1]+.5);n.endShape(n.CLOSE)}else n.rect(r.PositionX,r.PositionY,r.SizeX,r.SizeY)}}function c(){for(let t=0;t<gui_broker.electrodes.length;t++){let i=gui_broker.electrodes[t];if(i.Status!=0)if(n.fill("red"),i.Shape==1){n.beginShape();for(let t=0;t<i.Corners.length;t++)n.vertex(i.PositionX+i.Corners[t][0]+.5,i.PositionY+i.Corners[t][1]+.5);n.endShape(n.CLOSE)}else n.rect(i.PositionX,i.PositionY,i.SizeX,i.SizeY)}}function l(){for(let n=0;n<gui_broker.electrodes.length;n++){let t=gui_broker.electrodes[n];layer_electrode_shape.stroke("black");layer_electrode_shape.fill("white");t.Shape==1?a(t.PositionX,t.PositionY,t.Corners):layer_electrode_shape.rect(t.PositionX,t.PositionY,t.SizeX,t.SizeY)}}function a(n,t,i){layer_electrode_shape.beginShape();for(let r=0;r<i.length;r++)layer_electrode_shape.vertex(n+i[r][0]+.5,t+i[r][1]+.5);layer_electrode_shape.endShape(layer_electrode_shape.CLOSE)}function v(){for(let t=0;t<gui_broker.droplets.length;t++){let i=gui_broker.droplets[t];n.fill(i.Color);n.ellipse(i.PositionX,i.PositionY,i.SizeX,i.SizeY)}}function y(n,t){let i=0,r=0;if(t.Shape==1){n.fill(0,255,0);let u=0,f=0;for(let n=0;n<t.Corners.length;n++)u=parseInt(u)+(parseInt(t.PositionX)+parseInt(t.Corners[n][0])),f=parseInt(f)+(parseInt(t.PositionY)+parseInt(t.Corners[n][1]));i=u/t.Corners.length-n.textWidth(t.ID1)/2;r=f/t.Corners.length+n.textAscent(t.ID1)/2}else n.fill(255,200,0),i=t.PositionX+t.SizeX/2-n.textWidth(t.ID1)/2,r=t.PositionY+t.SizeY/2+n.textAscent(t.ID1)/2;n.textSize(6);n.text(t.ID1,i,r)}let t;n.setup=function(){let r=n.createCanvas(1,1);r.mouseClicked(i);console.log(r.position());n.pixelDensity(4);layer_electrode_shape=n.createGraphics(1,1);console.log("setup");t=.05;let u=n.select("#nextStep");u.mousePressed(()=>{})};n.draw=function(){n.background(240);amount<1?amount+=t:gui_broker.play_status&&gui_broker.next_simulator_step();n.image(layer_electrode_shape,0,0);layer_manager.layers.draw_active_electrodes.checkbox.checked&&c();layer_manager.draw_layers(n);layer_manager.layers.draw_droplets.checkbox.checked&&v();layer_manager.layers.draw_selected_element.checkbox.checked&&h(layer_manager.layers.draw_selected_element.layer,information_panel_manager.selected_element);layer_manager.layers.draw_droplet_groups.checkbox.checked&&e()};gui_broker.init_board=s};window.setp5=()=>(new p5(sketch,window.document.getElementById("container")),!0);window.update_board=n=>{var t=JSON.parse(n);gui_broker.droplets=t.Droplets;gui_broker.electrodes=t.Electrodes;gui_broker.get_droplet_groups();amount=0};window.change_play_status=()=>{gui_broker.play_status=!gui_broker.play_status};window.initialize_board=n=>{var t=JSON.parse(n);console.log(t);gui_broker.init_board(t.sizeX,t.sizeY+1);gui_controller.showGUI();gui_controller.changeBoardName(t.platform_name);layer_manager.initialize_layers()};window.get_selected_element=()=>JSON.stringify(information_panel_manager.selected_element);window.gui_broker=gui_broker;