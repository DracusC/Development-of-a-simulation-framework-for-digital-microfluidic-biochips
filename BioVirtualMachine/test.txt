#Testing program

DEF *elecToSet 0 
DEF *elecToClr 1 
DEF *maxX 2
DEF *minX 3

init:
  LI *elecToSet 100;
  LI *elecToClr 101;
  LI *minX 100;
  LI *maxX 124;

start:
  SETEL *elecToSet;
  TICK;
  CLREL *elecToClr;
  TICK;

  ADDI *elecToClr *elecToSet 0; #Copy 
  ADDI *elecToSet *elecToSet 1;

  BGE backwards *elecToSet *maxX;
  JI start;

backwards:  
  SETEL *elecToSet;
  TICK;
  CLREL *elecToClr;
  TICK;

  ADDI *elecToClr *elecToSet 0; #Copy 
  SUBI *elecToSet *elecToSet 1;

  BLE start *elecToSet *minX;
  JI backwards;








  SETELI 100;
  TICK;
  CLRELI 101;
  TICK;

  SETELI 101;
  TICK;
  CLRELI 100;
  TICK;

  SETELI 102;
  TICK;
  CLRELI 101;
  TICK;

  SETELI 103;
  TICK;
  CLRELI 102;
  TICK;

  SETELI 104;
  TICK;
  CLRELI 103;
  TICK;

  SETELI 103;
  TICK;
  CLRELI 104;
  TICK;

  SETELI 102;
  TICK;
  CLRELI 103;
  TICK;

  SETELI 101;
  TICK;
  CLRELI 102;
  TICK;

  JI start; 


old_start:  
  LI 0 0;
  LI 1 1;
  TSTART task_1;
  TSTART task_2;
  TICK;
  LI 3 3;
  DEVWR 10 100;
  DEVWR 10 150;
  BARR 1 3;
  LI 5 5;
  TSTOP;
  TICK;

task_1:
  LI 10 10;
  LI 20 20;
  LI 30 30;
  LI 40 40;
  LI 50 50;
  LI 60 60;
  DEVWR 11 100;
  BARR 1 3;
  TSTOP;
  TICK;

task_2:
  LI 100 100;
  LI 200 200;
  LI 300 300;
  LI 400 400;
  LI 500 500;
  LI 600 600;
  BARR 1 3;
  TSTOP;
  TICK;

#  TICK;



#
#routine_1:
#  LI 2 2;
#  LI 3 3;
#  J link_addr;
#
##############
#  #  TSTART task_1;
#  #  TSTART task_2;
#  #  TSTOP;
#  #^ NOP;
#
#  LI 0 0;
#  LI 0 0;
#  LI 0 0;
#  TSTOP;
#  TICK;
